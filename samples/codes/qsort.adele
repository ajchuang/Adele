int A[30];

void draw_str (string x) 

    consoleLog ("draw_str: " + x);
    graph g;
    g = str2graph(x);
    g @ (2, 15);
    draw ();
end

void drawhist()
  flush();
  graph g;
  g = str2graph("#");
  int i = 0;
  while (i<30)
    int j = 0;
    while (j<A[i])
      g @ (i, j);
      j = j + 1;
    end
    i = i + 1;
  end
  draw();
  sleep(120);
end

void qsort (int left, int right)
  int i = left;
  int j = right;
  int tmp;
  int pivot = A[i];

  while (i<=j)
    while (A[i]<pivot)
      i = i + 1;
    end

    while (A[j]>pivot)
      j = j - 1;
    end

    if (i<=j)
      tmp = A[i];
      A[i] = A[j];
      A[j] = tmp;
      i = i + 1;
      j = j - 1;
    end
  end

  drawhist();

  if (left < j)
      qsort (left, j);
  end

  if (right > i)
      qsort (i, right);
  end

end

void bbsort(int len)
  int i = 0;
  while (i<len-1)
    int j = i + 1;
    while (j < len)
      if (A[i]>A[j])
        int tmp = A[i];
        A[i] = A[j];
        A[j] = tmp;
      end
      j = j + 1;
      drawhist();
    end
    i = i + 1;
  end
end


int main ()

  draw_str ("Qsort demo!");
  sleep (1000);

  int t = 30;
  while (t)
    A[30-t] = random(39) + 1;
    t = t - 1;
  end
  qsort(0, 29);
  draw_str ("Done");
  #bbsort(30);
end
